// Generated by CoffeeScript 1.9.2
(function() {
  var Lote,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Lote = (function() {
    function Lote(id) {
      this.id = id;
      this.fireAmostraAdicionada = bind(this.fireAmostraAdicionada, this);
      this.addAmostraAdicionada = bind(this.addAmostraAdicionada, this);
      this.fireFimProcesso = bind(this.fireFimProcesso, this);
      this.addFimProcesso = bind(this.addFimProcesso, this);
      this.fireInicioProcesso = bind(this.fireInicioProcesso, this);
      this.addInicioProcesso = bind(this.addInicioProcesso, this);
      this.addAmostra = bind(this.addAmostra, this);
      this.verificarLotePronto = bind(this.verificarLotePronto, this);
      this.retornaHtml = bind(this.retornaHtml, this);
      this.status = 'aberto';
      console.log('novo lote ' + this.id);
      setTimeout(this.fireInicioProcesso, 30000);
      this.amostras = [];
      this.inicioProcessoList = [];
      this.fimProcessoList = [];
      this.amostraAdicionadaList = [];
    }

    Lote.prototype.retornaHtml = function() {
      return '<div class="panel panel-default" id="panel' + this.id + '"> <div class="panel-heading"> <h3 class="panel-title">Lote ' + this.id + '</h3> </div> <div class="panel-body" id="lote' + this.id + '"></div> </div>';
    };

    Lote.prototype.verificarLotePronto = function(a) {
      var am, i, len, processando, ref;
      $('#amostra' + a.id).replaceWith(a.retornaHtml());
      processando = false;
      ref = this.amostras;
      for (i = 0, len = ref.length; i < len; i++) {
        am = ref[i];
        if (am.status === 'processo') {
          processando = true;
        }
      }
      if (!processando) {
        return this.fireFimProcesso();
      }
    };

    Lote.prototype.addAmostra = function(a) {
      a.addResultadoPronto(this.verificarLotePronto);
      this.amostras.push(a);
      return this.fireAmostraAdicionada(a);
    };

    Lote.prototype.addInicioProcesso = function(f) {
      this.inicioProcessoList.push(f);
      return this;
    };

    Lote.prototype.fireInicioProcesso = function() {
      var a, f, i, j, len, len1, ref, ref1, results;
      this.status = 'processo';
      console.log('lote em processo ' + this.id);
      ref = this.amostras;
      for (i = 0, len = ref.length; i < len; i++) {
        a = ref[i];
        a.iniciarProcessamento();
      }
      ref1 = this.inicioProcessoList;
      results = [];
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        f = ref1[j];
        results.push(f(this));
      }
      return results;
    };

    Lote.prototype.addFimProcesso = function(f) {
      this.fimProcessoList.push(f);
      return this;
    };

    Lote.prototype.fireFimProcesso = function() {
      var f, i, len, ref, results;
      this.status = 'pronto';
      console.log('lote pronto ' + this.id);
      ref = this.fimProcessoList;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        f = ref[i];
        results.push(f(this));
      }
      return results;
    };

    Lote.prototype.addAmostraAdicionada = function(f) {
      this.amostraAdicionadaList.push(f);
      return this;
    };

    Lote.prototype.fireAmostraAdicionada = function(a) {
      var f, i, len, ref, results;
      console.log('amostra no lote ' + a.id);
      ref = this.amostraAdicionadaList;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        f = ref[i];
        results.push(f(this, a));
      }
      return results;
    };

    return Lote;

  })();

  root.Lote = Lote;

}).call(this);
