// Generated by CoffeeScript 1.9.2
(function() {
  var Amostra,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Amostra = (function() {
    function Amostra(id, exame, lote) {
      this.id = id;
      this.exame = exame;
      this.lote = lote;
      this.iniciarProcessamento = bind(this.iniciarProcessamento, this);
      this.fireResultadoPronto = bind(this.fireResultadoPronto, this);
      this.addResultadoPronto = bind(this.addResultadoPronto, this);
      this.inventarResultado = bind(this.inventarResultado, this);
      this.retornaHtml = bind(this.retornaHtml, this);
      this.criadoEm = new Date;
      this.status = 'aguardando';
      console.log('nova amostra ' + this.id + ' exame ' + this.exame.codigo);
      this.resultadoProntoList = [];
    }

    Amostra.prototype.retornaHtml = function() {
      var resultado, tipo;
      tipo = '';
      resultado = '';
      if (this.status === 'aguardando') {
        tipo = 'alert-info';
      } else if (this.status === 'processo') {
        tipo = 'alert-warning';
      } else if (this.status === 'pronto') {
        if (this.normal) {
          tipo = 'alert-success';
        } else if (!this.normal) {
          tipo = 'alert-danger';
        }
        if (this.exame.tipo === 'numero') {
          resultado = this.resultado;
        } else if (this.resultado) {
          resultado = 'Positivo';
        } else {
          resultado = 'Negativo';
        }
      }
      return '<div class="' + tipo + '" role="alert" id="amostra' + this.id + '">#' + this.id + ' ' + this.exame.codigo.toUpperCase() + ': ' + resultado;
      return +'</div>';
    };

    Amostra.prototype.inventarResultado = function() {
      this.resultadoEm = new Date;
      this.resultado = Math.round(Math.random() * (this.exame.maximoPossivel - this.exame.minimoPossivel) + this.exame.minimoPossivel);
      this.normal = this.exame.resultadoNormal(this.resultado);
      return this.fireResultadoPronto();
    };

    Amostra.prototype.addResultadoPronto = function(f) {
      return this.resultadoProntoList.push(f);
    };

    Amostra.prototype.fireResultadoPronto = function() {
      var f, i, len, ref, results;
      this.status = 'pronto';
      console.log('resultado pronto amostra ' + this.id + ' exame ' + this.exame.codigo + ' valor ' + this.resultado);
      ref = this.resultadoProntoList;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        f = ref[i];
        results.push(f(this));
      }
      return results;
    };

    Amostra.prototype.iniciarProcessamento = function() {
      this.status = 'processo';
      console.log('amostra em processo ' + this.id);
      return setTimeout(this.inventarResultado, Math.random() * 30000);
    };

    return Amostra;

  })();

  root.Amostra = Amostra;

}).call(this);
